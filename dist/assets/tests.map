{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","trainee/tests/acceptance/features-project-test.js","trainee/tests/acceptance/steps/steps.js","trainee/tests/acceptance/steps/steps.jshint.lint-test.js","trainee/tests/app.jshint.lint-test.js","trainee/tests/controllers/about.jshint.lint-test.js","trainee/tests/controllers/comandos.jshint.lint-test.js","trainee/tests/controllers/emberjs.jshint.lint-test.js","trainee/tests/controllers/emberjs/exemplos.jshint.lint-test.js","trainee/tests/controllers/home.jshint.lint-test.js","trainee/tests/controllers/instalacao.jshint.lint-test.js","trainee/tests/controllers/livros.jshint.lint-test.js","trainee/tests/controllers/nativescript.jshint.lint-test.js","trainee/tests/controllers/soapui.jshint.lint-test.js","trainee/tests/controllers/yadda.jshint.lint-test.js","trainee/tests/helpers/destroy-app.js","trainee/tests/helpers/destroy-app.jshint.lint-test.js","trainee/tests/helpers/module-for-acceptance.js","trainee/tests/helpers/module-for-acceptance.jshint.lint-test.js","trainee/tests/helpers/resolver.js","trainee/tests/helpers/resolver.jshint.lint-test.js","trainee/tests/helpers/start-app.js","trainee/tests/helpers/start-app.jshint.lint-test.js","trainee/tests/helpers/yadda.js","trainee/tests/helpers/yadda.jshint.lint-test.js","trainee/tests/models/about.jshint.lint-test.js","trainee/tests/models/comandos.jshint.lint-test.js","trainee/tests/models/emberjs.jshint.lint-test.js","trainee/tests/models/home.jshint.lint-test.js","trainee/tests/models/instalacao.jshint.lint-test.js","trainee/tests/models/livros.jshint.lint-test.js","trainee/tests/models/nativescript.jshint.lint-test.js","trainee/tests/models/soapui.jshint.lint-test.js","trainee/tests/models/yadda.jshint.lint-test.js","trainee/tests/resolver.jshint.lint-test.js","trainee/tests/router.jshint.lint-test.js","trainee/tests/routes/about.jshint.lint-test.js","trainee/tests/routes/comandos.jshint.lint-test.js","trainee/tests/routes/emberjs.jshint.lint-test.js","trainee/tests/routes/emberjs/exemplos.jshint.lint-test.js","trainee/tests/routes/home.jshint.lint-test.js","trainee/tests/routes/instalacao.jshint.lint-test.js","trainee/tests/routes/livros.jshint.lint-test.js","trainee/tests/routes/nativescript.jshint.lint-test.js","trainee/tests/routes/soapui.jshint.lint-test.js","trainee/tests/routes/yadda.jshint.lint-test.js","trainee/tests/test-helper.js","trainee/tests/test-helper.jshint.lint-test.js","trainee/tests/unit/controllers/about-test.js","trainee/tests/unit/controllers/about-test.jshint.lint-test.js","trainee/tests/unit/controllers/comandos-test.js","trainee/tests/unit/controllers/comandos-test.jshint.lint-test.js","trainee/tests/unit/controllers/emberjs-test.js","trainee/tests/unit/controllers/emberjs-test.jshint.lint-test.js","trainee/tests/unit/controllers/emberjs/exemplos-test.js","trainee/tests/unit/controllers/emberjs/exemplos-test.jshint.lint-test.js","trainee/tests/unit/controllers/home-test.js","trainee/tests/unit/controllers/home-test.jshint.lint-test.js","trainee/tests/unit/controllers/instalacao-test.js","trainee/tests/unit/controllers/instalacao-test.jshint.lint-test.js","trainee/tests/unit/controllers/livros-test.js","trainee/tests/unit/controllers/livros-test.jshint.lint-test.js","trainee/tests/unit/controllers/nativescript-test.js","trainee/tests/unit/controllers/nativescript-test.jshint.lint-test.js","trainee/tests/unit/controllers/soapui-test.js","trainee/tests/unit/controllers/soapui-test.jshint.lint-test.js","trainee/tests/unit/controllers/yadda-test.js","trainee/tests/unit/controllers/yadda-test.jshint.lint-test.js","trainee/tests/unit/models/about-test.js","trainee/tests/unit/models/about-test.jshint.lint-test.js","trainee/tests/unit/models/comandos-test.js","trainee/tests/unit/models/comandos-test.jshint.lint-test.js","trainee/tests/unit/models/emberjs-test.js","trainee/tests/unit/models/emberjs-test.jshint.lint-test.js","trainee/tests/unit/models/home-test.js","trainee/tests/unit/models/home-test.jshint.lint-test.js","trainee/tests/unit/models/instalacao-test.js","trainee/tests/unit/models/instalacao-test.jshint.lint-test.js","trainee/tests/unit/models/livros-test.js","trainee/tests/unit/models/livros-test.jshint.lint-test.js","trainee/tests/unit/models/nativescript-test.js","trainee/tests/unit/models/nativescript-test.jshint.lint-test.js","trainee/tests/unit/models/soapui-test.js","trainee/tests/unit/models/soapui-test.jshint.lint-test.js","trainee/tests/unit/models/yadda-test.js","trainee/tests/unit/models/yadda-test.jshint.lint-test.js","trainee/tests/unit/routes/about-test.js","trainee/tests/unit/routes/about-test.jshint.lint-test.js","trainee/tests/unit/routes/comandos-test.js","trainee/tests/unit/routes/comandos-test.jshint.lint-test.js","trainee/tests/unit/routes/emberjs-test.js","trainee/tests/unit/routes/emberjs-test.jshint.lint-test.js","trainee/tests/unit/routes/emberjs/exemplos-test.js","trainee/tests/unit/routes/emberjs/exemplos-test.jshint.lint-test.js","trainee/tests/unit/routes/home-test.js","trainee/tests/unit/routes/home-test.jshint.lint-test.js","trainee/tests/unit/routes/instalacao-test.js","trainee/tests/unit/routes/instalacao-test.jshint.lint-test.js","trainee/tests/unit/routes/livros-test.js","trainee/tests/unit/routes/livros-test.jshint.lint-test.js","trainee/tests/unit/routes/nativescript-test.js","trainee/tests/unit/routes/nativescript-test.jshint.lint-test.js","trainee/tests/unit/routes/soapui-test.js","trainee/tests/unit/routes/soapui-test.jshint.lint-test.js","trainee/tests/unit/routes/yadda-test.js","trainee/tests/unit/routes/yadda-test.jshint.lint-test.js","trainee/tests/unit/steps/steps.js","trainee/tests/unit/steps/steps.jshint.lint-test.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define('trainee/tests/acceptance/features-project-test', ['exports', 'ember', 'ember-qunit', 'qunit', 'trainee/tests/helpers/yadda', 'trainee/tests/acceptance/steps/features-project-steps', 'trainee/tests/helpers/start-app', 'trainee/tests/helpers/destroy-app'], function (exports, _ember, _emberQunit, _qunit, _traineeTestsHelpersYadda, _traineeTestsAcceptanceStepsFeaturesProjectSteps, _traineeTestsHelpersStartApp, _traineeTestsHelpersDestroyApp) {\n\n  function testFeature(feature) {\n    if (feature.annotations.ignore) {\n      (0, _emberQunit.skip)('Feature: ' + feature.title, function (assert) {});;\n    } else {\n      (0, _qunit.module)('Feature: ' + feature.title, {\n        beforeEach: function beforeEach() {\n          this.application = (0, _traineeTestsHelpersStartApp['default'])();\n        },\n        afterEach: function afterEach() {\n          (0, _traineeTestsHelpersDestroyApp['default'])(this.application);\n        }\n      });\n\n      feature.scenarios.forEach(function (scenario) {\n        if (scenario.annotations.ignore) {\n          (0, _emberQunit.skip)('Scenario: ' + scenario.title, function (assert) {});\n        } else {\n          (0, _emberQunit.test)('Scenario: ' + scenario.title, function (assert) {\n            return new _ember['default'].RSVP.Promise(function (resolve) {\n              _traineeTestsHelpersYadda['default'].Yadda(_traineeTestsAcceptanceStepsFeaturesProjectSteps['default'](assert), this).yadda(scenario.steps, { ctx: {} }, resolve);\n            });\n          });\n        }\n      });\n    }\n  };\n\n  testFeature({\n    \"title\": \"enter in emberjs\",\n    \"annotations\": {},\n    \"description\": [],\n    \"scenarios\": [{\n      \"title\": \"feature to enter in screen emberjs training\",\n      \"annotations\": {},\n      \"description\": [],\n      \"steps\": [\"Given I am in screen home\", \"When I visualize emberjs button training and click\", \"Then I enter in screen training emberjs\"]\n    }]\n  });\n});","define('trainee/tests/acceptance/steps/steps', ['exports', 'trainee/tests/helpers/yadda'], function (exports, _traineeTestsHelpersYadda) {\n  exports['default'] = function (assert) {\n    return _traineeTestsHelpersYadda['default'].localisation.English.library().given('I am in screen home', function (next) {\n      visit('/home');\n      assert.ok(true, this.step);\n      next();\n    }).when('I visualize emberjs button training and click', function (next) {\n      click('#btn_emberjs');\n      assert.ok(true, this.step);\n      next();\n    }).then('I enter in screen training emberjs', function (next) {\n      visit('/emberjs');\n      assert.ok(true, this.step);\n      next();\n    });\n  };\n});","define('trainee/tests/acceptance/steps/steps.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | acceptance/steps/steps.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/steps/steps.js should pass jshint.');\n  });\n});","define('trainee/tests/app.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'app.js should pass jshint.\\napp.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\napp.js: line 2, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\napp.js: line 3, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\napp.js: line 4, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\napp.js: line 6, col 1, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\napp.js: line 13, col 3, \\'object short notation\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\napp.js: line 18, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n7 errors');\n  });\n});","define('trainee/tests/controllers/about.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/about.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/about.js should pass jshint.\\ncontrollers/about.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/about.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('trainee/tests/controllers/comandos.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/comandos.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/comandos.js should pass jshint.\\ncontrollers/comandos.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/comandos.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('trainee/tests/controllers/emberjs.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/emberjs.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/emberjs.js should pass jshint.\\ncontrollers/emberjs.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/emberjs.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('trainee/tests/controllers/emberjs/exemplos.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/emberjs/exemplos.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/emberjs/exemplos.js should pass jshint.\\ncontrollers/emberjs/exemplos.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/emberjs/exemplos.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('trainee/tests/controllers/home.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/home.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/home.js should pass jshint.\\ncontrollers/home.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/home.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('trainee/tests/controllers/instalacao.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/instalacao.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/instalacao.js should pass jshint.\\ncontrollers/instalacao.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/instalacao.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('trainee/tests/controllers/livros.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/livros.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/livros.js should pass jshint.\\ncontrollers/livros.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/livros.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('trainee/tests/controllers/nativescript.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/nativescript.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/nativescript.js should pass jshint.\\ncontrollers/nativescript.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/nativescript.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('trainee/tests/controllers/soapui.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/soapui.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/soapui.js should pass jshint.\\ncontrollers/soapui.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/soapui.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('trainee/tests/controllers/yadda.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/yadda.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/yadda.js should pass jshint.\\ncontrollers/yadda.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/yadda.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('trainee/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('trainee/tests/helpers/destroy-app.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/destroy-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass jshint.');\n  });\n});","define('trainee/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'ember', 'trainee/tests/helpers/start-app', 'trainee/tests/helpers/destroy-app'], function (exports, _qunit, _ember, _traineeTestsHelpersStartApp, _traineeTestsHelpersDestroyApp) {\n  var Promise = _ember['default'].RSVP.Promise;\n\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _traineeTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          return options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        var _this = this;\n\n        var afterEach = options.afterEach && options.afterEach.apply(this, arguments);\n        return Promise.resolve(afterEach).then(function () {\n          return (0, _traineeTestsHelpersDestroyApp['default'])(_this.application);\n        });\n      }\n    });\n  };\n});","define('trainee/tests/helpers/module-for-acceptance.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/module-for-acceptance.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass jshint.');\n  });\n});","define('trainee/tests/helpers/resolver', ['exports', 'trainee/resolver', 'trainee/config/environment'], function (exports, _traineeResolver, _traineeConfigEnvironment) {\n\n  var resolver = _traineeResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _traineeConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _traineeConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('trainee/tests/helpers/resolver.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n});","define('trainee/tests/helpers/start-app', ['exports', 'ember', 'trainee/app', 'trainee/config/environment'], function (exports, _ember, _traineeApp, _traineeConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    // use defaults, but you can override\n    var attributes = _ember['default'].assign({}, _traineeConfigEnvironment['default'].APP, attrs);\n\n    _ember['default'].run(function () {\n      application = _traineeApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('trainee/tests/helpers/start-app.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/start-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n});","define('trainee/tests/helpers/yadda', ['exports', 'npm:yadda'], function (exports, _npmYadda) {\n  exports['default'] = _npmYadda['default'];\n});","define('trainee/tests/helpers/yadda.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/yadda.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/yadda.js should pass jshint.');\n  });\n});","define('trainee/tests/models/about.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/about.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'models/about.js should pass jshint.\\nmodels/about.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nmodels/about.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('trainee/tests/models/comandos.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/comandos.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'models/comandos.js should pass jshint.\\nmodels/comandos.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nmodels/comandos.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('trainee/tests/models/emberjs.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/emberjs.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'models/emberjs.js should pass jshint.\\nmodels/emberjs.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nmodels/emberjs.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('trainee/tests/models/home.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/home.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'models/home.js should pass jshint.\\nmodels/home.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nmodels/home.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('trainee/tests/models/instalacao.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/instalacao.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'models/instalacao.js should pass jshint.\\nmodels/instalacao.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nmodels/instalacao.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('trainee/tests/models/livros.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/livros.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'models/livros.js should pass jshint.\\nmodels/livros.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nmodels/livros.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('trainee/tests/models/nativescript.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/nativescript.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'models/nativescript.js should pass jshint.\\nmodels/nativescript.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nmodels/nativescript.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('trainee/tests/models/soapui.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/soapui.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'models/soapui.js should pass jshint.\\nmodels/soapui.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nmodels/soapui.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('trainee/tests/models/yadda.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/yadda.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'models/yadda.js should pass jshint.\\nmodels/yadda.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nmodels/yadda.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('trainee/tests/resolver.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'resolver.js should pass jshint.\\nresolver.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nresolver.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('trainee/tests/router.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | router.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'router.js should pass jshint.\\nrouter.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nrouter.js: line 2, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nrouter.js: line 4, col 1, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\nrouter.js: line 23, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n4 errors');\n  });\n});","define('trainee/tests/routes/about.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/about.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/about.js should pass jshint.\\nroutes/about.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nroutes/about.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('trainee/tests/routes/comandos.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/comandos.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/comandos.js should pass jshint.\\nroutes/comandos.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nroutes/comandos.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('trainee/tests/routes/emberjs.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/emberjs.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/emberjs.js should pass jshint.\\nroutes/emberjs.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nroutes/emberjs.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('trainee/tests/routes/emberjs/exemplos.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/emberjs/exemplos.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/emberjs/exemplos.js should pass jshint.\\nroutes/emberjs/exemplos.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nroutes/emberjs/exemplos.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('trainee/tests/routes/home.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/home.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/home.js should pass jshint.\\nroutes/home.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nroutes/home.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('trainee/tests/routes/instalacao.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/instalacao.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/instalacao.js should pass jshint.\\nroutes/instalacao.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nroutes/instalacao.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('trainee/tests/routes/livros.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/livros.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/livros.js should pass jshint.\\nroutes/livros.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nroutes/livros.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('trainee/tests/routes/nativescript.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/nativescript.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/nativescript.js should pass jshint.\\nroutes/nativescript.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nroutes/nativescript.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('trainee/tests/routes/soapui.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/soapui.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/soapui.js should pass jshint.\\nroutes/soapui.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nroutes/soapui.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('trainee/tests/routes/yadda.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/yadda.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/yadda.js should pass jshint.\\nroutes/yadda.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nroutes/yadda.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('trainee/tests/test-helper', ['exports', 'trainee/tests/helpers/resolver', 'ember-qunit'], function (exports, _traineeTestsHelpersResolver, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_traineeTestsHelpersResolver['default']);\n});","define('trainee/tests/test-helper.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | test-helper.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n});","define('trainee/tests/unit/controllers/about-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:about', 'Unit | Controller | about', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('trainee/tests/unit/controllers/about-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/about-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/about-test.js should pass jshint.');\n  });\n});","define('trainee/tests/unit/controllers/comandos-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:comandos', 'Unit | Controller | comandos', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('trainee/tests/unit/controllers/comandos-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/comandos-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/comandos-test.js should pass jshint.');\n  });\n});","define('trainee/tests/unit/controllers/emberjs-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:emberjs', 'Unit | Controller | emberjs', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('trainee/tests/unit/controllers/emberjs-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/emberjs-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/emberjs-test.js should pass jshint.');\n  });\n});","define('trainee/tests/unit/controllers/emberjs/exemplos-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:emberjs/exemplos', 'Unit | Controller | emberjs/exemplos', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('trainee/tests/unit/controllers/emberjs/exemplos-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/emberjs/exemplos-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/emberjs/exemplos-test.js should pass jshint.');\n  });\n});","define('trainee/tests/unit/controllers/home-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:home', 'Unit | Controller | home', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('trainee/tests/unit/controllers/home-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/home-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/home-test.js should pass jshint.');\n  });\n});","define('trainee/tests/unit/controllers/instalacao-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:instalacao', 'Unit | Controller | instalacao', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('trainee/tests/unit/controllers/instalacao-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/instalacao-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/instalacao-test.js should pass jshint.');\n  });\n});","define('trainee/tests/unit/controllers/livros-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:livros', 'Unit | Controller | livros', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('trainee/tests/unit/controllers/livros-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/livros-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/livros-test.js should pass jshint.');\n  });\n});","define('trainee/tests/unit/controllers/nativescript-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:nativescript', 'Unit | Controller | nativescript', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('trainee/tests/unit/controllers/nativescript-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/nativescript-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/nativescript-test.js should pass jshint.');\n  });\n});","define('trainee/tests/unit/controllers/soapui-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:soapui', 'Unit | Controller | soapui', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('trainee/tests/unit/controllers/soapui-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/soapui-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/soapui-test.js should pass jshint.');\n  });\n});","define('trainee/tests/unit/controllers/yadda-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:yadda', 'Unit | Controller | yadda', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('trainee/tests/unit/controllers/yadda-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/yadda-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/yadda-test.js should pass jshint.');\n  });\n});","define('trainee/tests/unit/models/about-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('about', 'Unit | Model | about', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('trainee/tests/unit/models/about-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/about-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/about-test.js should pass jshint.');\n  });\n});","define('trainee/tests/unit/models/comandos-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('comandos', 'Unit | Model | comandos', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('trainee/tests/unit/models/comandos-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/comandos-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/comandos-test.js should pass jshint.');\n  });\n});","define('trainee/tests/unit/models/emberjs-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('emberjs', 'Unit | Model | emberjs', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('trainee/tests/unit/models/emberjs-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/emberjs-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/emberjs-test.js should pass jshint.');\n  });\n});","define('trainee/tests/unit/models/home-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('home', 'Unit | Model | home', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('trainee/tests/unit/models/home-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/home-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/home-test.js should pass jshint.');\n  });\n});","define('trainee/tests/unit/models/instalacao-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('instalacao', 'Unit | Model | instalacao', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('trainee/tests/unit/models/instalacao-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/instalacao-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/instalacao-test.js should pass jshint.');\n  });\n});","define('trainee/tests/unit/models/livros-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('livros', 'Unit | Model | livros', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('trainee/tests/unit/models/livros-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/livros-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/livros-test.js should pass jshint.');\n  });\n});","define('trainee/tests/unit/models/nativescript-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('nativescript', 'Unit | Model | nativescript', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('trainee/tests/unit/models/nativescript-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/nativescript-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/nativescript-test.js should pass jshint.');\n  });\n});","define('trainee/tests/unit/models/soapui-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('soapui', 'Unit | Model | soapui', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('trainee/tests/unit/models/soapui-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/soapui-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/soapui-test.js should pass jshint.');\n  });\n});","define('trainee/tests/unit/models/yadda-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('yadda', 'Unit | Model | yadda', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('trainee/tests/unit/models/yadda-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/yadda-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/yadda-test.js should pass jshint.');\n  });\n});","define('trainee/tests/unit/routes/about-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:about', 'Unit | Route | about', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('trainee/tests/unit/routes/about-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/about-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/about-test.js should pass jshint.');\n  });\n});","define('trainee/tests/unit/routes/comandos-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:comandos', 'Unit | Route | comandos', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('trainee/tests/unit/routes/comandos-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/comandos-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/comandos-test.js should pass jshint.');\n  });\n});","define('trainee/tests/unit/routes/emberjs-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:emberjs', 'Unit | Route | emberjs', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('trainee/tests/unit/routes/emberjs-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/emberjs-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/emberjs-test.js should pass jshint.');\n  });\n});","define('trainee/tests/unit/routes/emberjs/exemplos-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:emberjs/exemplos', 'Unit | Route | emberjs/exemplos', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('trainee/tests/unit/routes/emberjs/exemplos-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/emberjs/exemplos-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/emberjs/exemplos-test.js should pass jshint.');\n  });\n});","define('trainee/tests/unit/routes/home-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:home', 'Unit | Route | home', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('trainee/tests/unit/routes/home-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/home-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/home-test.js should pass jshint.');\n  });\n});","define('trainee/tests/unit/routes/instalacao-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:instalacao', 'Unit | Route | instalacao', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('trainee/tests/unit/routes/instalacao-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/instalacao-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/instalacao-test.js should pass jshint.');\n  });\n});","define('trainee/tests/unit/routes/livros-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:livros', 'Unit | Route | livros', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('trainee/tests/unit/routes/livros-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/livros-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/livros-test.js should pass jshint.');\n  });\n});","define('trainee/tests/unit/routes/nativescript-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:nativescript', 'Unit | Route | nativescript', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('trainee/tests/unit/routes/nativescript-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/nativescript-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/nativescript-test.js should pass jshint.');\n  });\n});","define('trainee/tests/unit/routes/soapui-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:soapui', 'Unit | Route | soapui', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('trainee/tests/unit/routes/soapui-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/soapui-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/soapui-test.js should pass jshint.');\n  });\n});","define('trainee/tests/unit/routes/yadda-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:yadda', 'Unit | Route | yadda', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('trainee/tests/unit/routes/yadda-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/yadda-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/yadda-test.js should pass jshint.');\n  });\n});","define('trainee/tests/unit/steps/steps', ['exports', 'trainee/tests/helpers/yadda'], function (exports, _traineeTestsHelpersYadda) {\n  exports['default'] = function (assert) {\n    return _traineeTestsHelpersYadda['default'].localisation.English.library().given('I type \"Ember g feature make-feature\"', function (next) {\n      assert.ok(true, this.step);\n      next();\n    }).when('I look in the folder', function (next) {\n      assert.ok(true, this.step);\n      next();\n    });\n  };\n});","define('trainee/tests/unit/steps/steps.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/steps/steps.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/steps/steps.js should pass jshint.');\n  });\n});","/* jshint ignore:start */\n\nrequire('trainee/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChfile":"tests.js"}